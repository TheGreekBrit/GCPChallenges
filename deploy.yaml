---
- hosts: localhost
  gather_facts: no
  connection: local

  vars:
    project_id: intrepid-craft-195800
    service_account: challenge-user
    zone: us-west1-b
    region: us-west1
    machine_type: f1-micro

    app_name: app.py
    ip_name: mysecondip
    instance_name: mysecondinstance
    image_name: mysecondimage
    mig_name: mysecondmig
    template_name: mysecondtemplate

    credentials_file: client_secrets.json
    document_root: /var/www/html
    mig_size: 3
    service_account_email: "{{ service_account }}@{{ project_id }}.iam.gserviceaccount.com"


  tasks:
    - name: debug
      debug:
        msg: "{{ service_account_email }}"

    - name: ip addr
      gce_eip:
        name: "{{ ip_name }}"
        region: "{{ region }}"
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
#    - name: create IP address
#      gcp_compute_address:
#        auth_kind: serviceaccount
#        name: "{{ ip_name }}"
#        project: "{{ project_id }}"
#        region: "{{ region }}"
#        scopes:
#          - https://www.googleapis.com/auth/compute
#        service_account_file: "{{ credentials_file }}"
#        state: present
#      register: address


    - name: create instance
      gce:
        instance_names: "{{ instance_name }}"
        credentials_file: "{{ credentials_file }}"
        zone: "{{ zone }}"
        machine_type: "{{ machine_type }}"
        service_account_email: "{{ service_account_email }}"
        service_account_permissions:
          - compute-rw
#        external_ip: "{{ ip_name }}"
        project_id: "{{ project_id }}"
      register: gce


    - name: deploy app
      copy:
        src: app_name
        dest: "{{ document_root }}/{{ app_name }}"
        force: yes


    - name: update apt and install nginx
      apt:
        name: nginx
        state: latest
        update_cache: yes
   
 
    - name: create image from app
      gcp_compute_image:
        name: "{{ image_name }}"
        project: "{{ project_id }}"
        source_disk: "{{ instance_name }}"
        

    - name: create template from app
      gcp_compute_instance_template:
        auth_kind: serviceaccount
        project: "{{ project_id }}"
        service_account_file: "{{ credentials_file }}"
        properties:
          - disks:
            initialize_params:
              source_image: "{{ image_name }}"


    - name: create managed instance group using template
      gce_mig:
        name: "{{ mig_name }}"
        project: "{{ project_id }}"
        recreate_instances: yes
        size: "{{ mig_size }}"
        template: "{{ template_name }}"
        zone: "{{ zone }}"
        autoscaling:
          enabled: yes
          name: "{{ autoscaler_name }}"
          policy:
            min_instances: 2
            max_instance: 4
            cool_down_period: 45
            cpu_utilization:
              target: 0.2
            load_balancing_utilization:
              target: 0.3

# TODO: MAY NOT BE USABLE
#    - name: create load balancers using managed instance group
#      gce_lb:
#        name: "{{ lb_name }}"
#        credentials_file: "{{ credentials_file }}"
